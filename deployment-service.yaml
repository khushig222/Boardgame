apiVersion: apps/v1
kind: Deployment
metadata:
  name: boardgame-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: boardgame
  template:
    metadata:
      labels:
        app: boardgame
    spec:
      containers:
        - name: boardgame
          image: 293676968103.dkr.ecr.us-east-1.amazonaws.com/boardgame:latest # <-- update if using ECR
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
      imagePullSecrets:                     # <-- moved to the pod spec
        - name: ecr-registry-secret
---
apiVersion: v1
kind: Service
metadata:
  name: boardgame-ssvc
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/healthz"
spec:
  selector:
    app: boardgame
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer

# apiVersion: apps/v1
# kind: Deployment # Kubernetes resource kind we are creating
# metadata:
#   name: boardgame-deployment
# spec:
#   selector:
#     matchLabels:
#       app: boardgame
#   replicas: 2 # Number of replicas that will be created for this deployment
#   template:
#     metadata:
#       labels:
#         app: boardgame
#     spec:
#       containers:
#         - name: boardgame
#           image: venkatbs/workshop:latest # Image that will be used to containers in the cluster
#           imagePullPolicy: Always
#           ports:
#             - containerPort: 8080 # The port that the container is running on in the cluster


# ---

# apiVersion: v1 # Kubernetes API version
# kind: Service # Kubernetes resource kind we are creating
# metadata: # Metadata of the resource kind we are creating
#   name: boardgame-ssvc
# spec:
#   selector:
#     app: boardgame
#   ports:
#     - protocol: "TCP"
#       port: 80
#       targetPort: 8080 
#   type: LoadBalancer # type of the service.
